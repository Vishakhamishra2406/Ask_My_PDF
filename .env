   GOOGLE_API_KEY=AIzaSyB-YsBJK00IzQjxfqHeYjkgbnl43mr9Gow
import google.generativeai as genai
from utils import ensure_event_loop

class PDFChatbot:
    # ... (other methods unchanged)

    def ask(self, query):
        """Query the PDF content using Gemini API directly with retrieved context."""
        if not self.retriever:
            raise RuntimeError("No retriever found. Please upload and process a PDF first.")
        try:
            ensure_event_loop()
            # Retrieve relevant context from the vector store
            docs = self.retriever.get_relevant_documents(query)
            context = "\n\n".join([doc.page_content for doc in docs])

            # Prepare the prompt for Gemini
            prompt = f"Context:\n{context}\n\nQuestion: {query}\nAnswer:"

            # Set up Gemini client
            genai.configure(api_key=self.google_api_key)
            model = genai.GenerativeModel("gemini-2.5-flash")  # or another available model

            # Call Gemini API
            response = model.generate_content(prompt)
            return response.text
        except Exception as e:
            raise RuntimeError(f"Failed to get answer: {e}")